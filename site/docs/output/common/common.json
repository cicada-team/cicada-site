{"can1-yu3-gong4-xian4":{"title":"参与贡献","description":"基础教程","author":"imink","date":"2017-08-01T00:00:00.000Z","url":"can1-yu3-gong4-xian4","toc":[{"id":"can1-yu3-fang1-shi4","value":"参与方式"},{"id":"ti2-jiao1-bug-he2-jian4-yi4-de-issue","value":"提交 bug 和 建议的 issue"},{"id":"gong4-xian4-dai4-ma3","value":"贡献代码"},{"id":"dai4-ma3-feng1-ge2","value":"代码风格"},{"id":"zhu4-shi4-feng1-ge2","value":"注释风格"},{"id":"ce4-shi4","value":"测试"},{"id":"wen2-dang4-gong4-xian4","value":"文档贡献"}],"content":"<h2 id=\"can1-yu3-fang1-shi4\">参与方式</h2>\n<p>我们鼓励以下方式来参与 Cicada 社区，包括但不限于：</p>\n<ul>\n<li>提交 bug 和 建议的 issue</li>\n<li>贡献代码</li>\n<li>加入钉钉群</li>\n<li>在其他论坛和社区，推广给其他开发者</li>\n</ul>\n<h2 id=\"ti2-jiao1-bug-he2-jian4-yi4-de-issue\">提交 bug 和 建议的 issue</h2>\n<p>点击<a href=\"\">这里</a> 打开 issue，发表建议和提交 bug</p>\n<h2 id=\"gong4-xian4-dai4-ma3\">贡献代码</h2>\n<p>首先 fork and git clone</p>\n<pre class=\"hljs\"><code>git <span class=\"hljs-built_in\">clone</span> git@github.com/xxx.git \ngit checkout dev\n// after modify the code\ngit add path-to-your-code\n// commit 信息请参考\ngit commit -m <span class=\"hljs-string\">\"fix:bug fix #xxx\"</span>  \ngit push origin dev\n</code></pre>\n<p>然后进入本项目主页的Pull Request页面，点击New Pull Request, 选择你自己的分支 点击 create pull request，这样就 OK 了</p>\n<p>怎样把fork后的仓库和主仓库保持同步？</p>\n<p>新添加一个名为 upstream的 remote 指向公共仓库</p>\n<p>这行命令只需要运行一次</p>\n<pre class=\"hljs\"><code>git remote add upstream https://github.com/xxx.git\n</code></pre>\n<p>从公共仓库获取 master 分支</p>\n<pre class=\"hljs\"><code>git fetch upstream\ngit checkout master\ngit merge upstream/master\n</code></pre>\n<h2 id=\"dai4-ma3-feng1-ge2\">代码风格</h2>\n<p>源码包含了 eslint 的规范文件，来自于 <a href=\"https://github.com/airbnb/javascript\">Airbnb JavaScript Style</a>。\n所以我们希望在每次提交代码之前请 <code>npm run eslint</code>，来检查代码的书写风格。</p>\n<h2 id=\"zhu4-shi4-feng1-ge2\">注释风格</h2>\n<p>我们使用 <a href=\"http://usejsdoc.org/\">JS Doc</a> 作为统一的代码注释，所以请在重要的方法上加上<strong>英文</strong>注释。</p>\n<h2 id=\"ce4-shi4\">测试</h2>\n<p>在代码提交之前，请先运行本地的测试。</p>\n<h2 id=\"wen2-dang4-gong4-xian4\">文档贡献</h2>\n<p>文档采用 <a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\">中文文案排版</a>，除此之外，我们加入以下规范：</p>\n<ul>\n<li>英文的左右保持一个空白，避免中英文字黏在一起</li>\n<li>使用全角标点符号</li>\n</ul>\n","githubLink":"githubLikn/src/common/contribution.md"},"chuang4-jian4-bu4-ju2":{"title":"创建布局","url":"chuang4-jian4-bu4-ju2","toc":[{"id":"1-jin4-ru4-ni3-de-ying1-yong4","value":"1. 进入你的应用"},{"id":"2-chuang4-jian4-bu4-ju2-wen2-jian4-jia1","value":"2. 创建布局文件夹"},{"id":"3-xin1-jian4-ye4-mian4-bu4-ju2","value":"3. 新建页面布局"}],"content":"<p>创建完应用以后，你就可以创建页面了，但是在创建页面之前你需要先创建布局，布局通常是页面公共头尾等部分。</p>\n<h2 id=\"1-jin4-ru4-ni3-de-ying1-yong4\">1. 进入你的应用</h2>\n<p>进入你刚刚创建的应用，你会看见与下图类似的页面\n<img src=\"https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/skylark/png/3991/deb1db70ba27c118.png\" alt=\"deb1db70ba27c118.png\">\n绿色部分展示了你的应用名称(应用别名)(应用版本)，版本默认为1.0001\n红色部分为你的应用根文件夹</p>\n<h2 id=\"2-chuang4-jian4-bu4-ju2-wen2-jian4-jia1\">2. 创建布局文件夹</h2>\n<p>要创建布局，首先要创建布局文件夹，在应用根文件夹下右键，你会看到如下菜单\n<img src=\"https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/skylark/png/3991/755629a80941efc7.png\" alt=\"755629a80941efc7.png\">\n布局文件夹只能存在一个，因此如果应用中已存在布局文件夹，则看不到上面菜单\n布局文件夹的icon有特殊标识，这样方便用户找到已存在的布局文件夹，如下图所示\n<img src=\"https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/skylark/png/3991/88bf136d15348748.png\" alt=\"88bf136d15348748.png\"></p>\n<h2 id=\"3-xin1-jian4-ye4-mian4-bu4-ju2\">3. 新建页面布局</h2>\n<p>在布局文件夹上右键，你可以看到新建布局菜单，布局目前分为布局与移动布局，移动布局为移动端，布局则为PC端的，根据你的需要创建相应的布局就行\n<img src=\"https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/skylark/png/3991/b9e14e9714bb3ab5.png\" alt=\"b9e14e9714bb3ab5.png\">\n新建布局的表单如上图所示，其中父层布局是用来支持布局套嵌布局时用的，第三方库与外链样式分别为此布局上引入的外链js与css文件，你如果想引入第三方js sdk以及css theme可以在这里设置\n双击打开你刚才创建的布局，如下图所示\n<img src=\"https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/skylark/png/3991/74fcbe008be66d4e.png\" alt=\"74fcbe008be66d4e.png\">\n红色区域为页面结构编辑区域，你在这里可以添加金蝉支持的所有组件\n绿色区域为属性编辑区域，你选中一个组件后，所有可编辑的属性都会展示在这里\n<img src=\"https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/skylark/png/3991/49577ea87bb5d403.png\" alt=\"49577ea87bb5d403.png\">\n如上图所示，布局文件编辑完成后，点击红色区域按钮保存布局，也可以使用快捷键&lt;ctrl + s&gt;(windows)、&lt;command + s&gt;(mac)</p>\n<h4 id=\"zhu4-yi4-bu4-ju2-ye4-mian4-jie2-gou4-li3-bi4-xu1-yao4-you3-content-zhe4-ge4-te4-shu1-zu3-jian4-yin1-wei2-zui4-zhong1-zhe4-ge4-zu3-jian4-hui4-bei4-ti4-huan4-wei2-ye4-mian4-nei4-rong2\">注意：布局页面结构里必须要有Content这个特殊组件，因为最终这个组件会被替换为页面内容</h4>\n","githubLink":"githubLikn/src/common/创建布局.md"}}